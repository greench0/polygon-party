{"ast":null,"code":"import _classCallCheck from \"/Users/cgreen/Desktop/polygon-party/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cgreen/Desktop/polygon-party/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cgreen/Desktop/polygon-party/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cgreen/Desktop/polygon-party/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cgreen/Desktop/polygon-party/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cgreen/Desktop/polygon-party/src/pages/Misc.js\";\nimport React, { Component } from 'react';\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp() {\n    _classCallCheck(this, SignUp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SignUp).apply(this, arguments));\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    //  constructor(props) {\n    //       super(props);\n    //       this.state = { circleRadius: new Animated.Value(50) };\n    //       this.state.circleRadius.addListener( (circleRadius) => {\n    //         this._myCircle.setNativeProps({ r: circleRadius.value.toString() });\n    //       });\n    //       setTimeout( () => {\n    //         Animated.spring( this.state.circleRadius, { toValue: 100, friction: 3 } ).start();\n    //       }, 2000)\n    //     }\n    // let mainBlock = Snap('#main-block');\n    // Snap.load(\"assets/svg/block-main.svg\", onSVGLoaded);\n    // function onSVGLoaded(data) {\n    //   mainBlock.append(data);\n    // }\n    // const MySvg = props => <svg xmlns=\"http://www.w3.org/2000/svg\">...</svg>;\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nexport { SignUp as default };","map":{"version":3,"sources":["/Users/cgreen/Desktop/polygon-party/src/pages/Misc.js"],"names":["React","Component","SignUp"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,M;;;;;;;;;;;;;AACjB;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGC;AAEA;AAEA;AACA;AACA;AAEA;6BAES;AACJ,aACK;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL;AAeJ;;;;EA1C8BD,S;;SAAfC,M","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class SignUp extends Component {\r\n    //  constructor(props) {\r\n    //       super(props);\r\n        \r\n    //       this.state = { circleRadius: new Animated.Value(50) };\r\n        \r\n    //       this.state.circleRadius.addListener( (circleRadius) => {\r\n    //         this._myCircle.setNativeProps({ r: circleRadius.value.toString() });\r\n    //       });\r\n        \r\n    //       setTimeout( () => {\r\n    //         Animated.spring( this.state.circleRadius, { toValue: 100, friction: 3 } ).start();\r\n    //       }, 2000)\r\n    //     }\r\n\r\n        \r\n     // let mainBlock = Snap('#main-block');\r\n\r\n     // Snap.load(\"assets/svg/block-main.svg\", onSVGLoaded);\r\n   \r\n     // function onSVGLoaded(data) {\r\n     //   mainBlock.append(data);\r\n     // }\r\n\r\n     // const MySvg = props => <svg xmlns=\"http://www.w3.org/2000/svg\">...</svg>;\r\n\r\n     render() {\r\n          return (\r\n               <div className=\"wrapper\">\r\n\r\n{/* \r\n\r\n    <Svg height=\"400\" width=\"400\">\r\n      <AnimatedCircle ref={ ref => this._myCircle = ref } cx=\"250\" cy=\"250\" r=\"50\" fill=\"black\" />\r\n    </Svg> */}\r\n\r\n\r\n\r\n\r\n\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}